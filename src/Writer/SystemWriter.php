<?php
/**
 * Created by PhpStorm.
 * User: kkuczek
 * Date: 2016-01-25
 * Time: 11:41
 */

namespace Hexmedia\Crontab\Writer;

use Hexmedia\Crontab\Crontab;
use Hexmedia\Crontab\Exception\CrontabException;

/**
 * Class SystemWriter
 * @package Hexmedia\Crontab\Writer
 *
 * TODO: This writer should be abstraction for Unix and other writers
 */
class SystemWriter // implements WriterInterface
{
    private $temporaryDirectory;
    private $user = null;

    public function __construct(array $configuration = array())
    {
        if (isset($configuration['temporaryDirectory'])) {
            $this->temporaryDirectory = $configuration['temporaryDirectory'];
        } else {
            $this->temporaryDirectory = sys_get_temp_dir();
        }

        if (isset($configuration['user'])) {
            $this->user = $configuration['user'];
        }
    }

    public function save(Crontab $crontab)
    {
        $filePath = $this->createTemporaryFile($crontab);

        $this->saveToSystem($filePath);
    }

    /**
     * @param Crontab $crontab
     * @return string path to temporary file
     */
    private function createTemporaryFile(Crontab $crontab)
    {
        $name = microtime(true) . '.crontab';

        $filePath = $this->temporaryDirectory . DIRECTORY_SEPARATOR . $name;

        $fileHandler = fopen($filePath, "w+");
        flock($fileHandler, LOCK_EX);
        fwrite($fileHandler, $this->toCronFile($crontab));
        fflush($fileHandler);
        flock($fileHandler, LOCK_UN);
        fclose($fileHandler);

        return $filePath;
    }

    /**
     * @param Crontab $crontab
     * @return string
     */
    public function toCronFile(Crontab $crontab)
    {
        $content = "";
        foreach ($crontab->getNotManagedTasks() as $task) {
            $content .= sprintf("%s\n", $task); //Move from __toString to some systemSaver
        }

        $content .= sprintf("# ------------ CURRENTLY MANAGED by %s --------------\n", $crontab->getName());

        foreach ($crontab->getManagedTasks() as $task) {
            $content .= sprintf("%s\n", $task); //Move from __toString to some systemSaver
        }

        $content = str_replace("#This cron file was generated by CrontabLibrary by Hexmedia\n\n", "", $content);

        $content = "#This cron file was generated by CrontabLibrary by Hexmedia\n\n" . $content;

        return $content;
    }

    /**
     * @param $filePath
     * @param null $user
     * @throws CrontabException
     */
    private function saveToSystem($filePath)
    {
        $command = sprintf("crontab %s %s", $this->user ? '-u ' . $this->user : '', $filePath);

        $result = exec($command, $output);

        if ($result) {
            throw new CrontabException(
                sprintf("Cannot read crontab list. Error: %s", $output)
            );
        }
    }

    /**
     * @return null|string
     */
    public function getTemporaryDirectory()
    {
        return $this->temporaryDirectory;
    }

    /**
     * @param null|string $temporaryDirectory
     *
     * @return $this;
     */
    public function setTemporaryDirectory($temporaryDirectory)
    {
        $this->temporaryDirectory = $temporaryDirectory;

        return $this;
    }
}
